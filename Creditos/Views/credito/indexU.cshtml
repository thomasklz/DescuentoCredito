@model Creditos.Models.mCredito
@{List<Creditos.Models.mCredito> listCredxUsu = ViewBag.credxus;}

 <!-- begin::Barra Inicio -->
<div class="kt-subheader kt-grid__item" id="kt_subheader">
    <div class="kt-container ">
        <div class="kt-subheader__main">
            <h4>
                BIENVENIDOS
                <small>Solicitud de Creditos</small>
            </h4>
            <span class="kt-subheader__separator kt-hidden"></span>
        </div>
    </div>
</div>
 <!-- end::Barra Inicio -->

@using (Html.BeginForm("Store", "credito", FormMethod.Post))
{
    <div>
        <div class="kt-portlet__body">
            <div class="row">
                <div class="col-lg-12">
                    <div class="kt-section">
                        <label>Descripción:</label>
                            @Html.TextAreaFor(m => m.descripcion, new { style= "max-width:none;", @id = "descripcions", @class = "form-control", @placeholder = "Describa Brevemente su Crédito", @name = "descripcion" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="kt-section">
                        <label>Cantidad:</label>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"><i class="la la-money"></i></span></div>
                            @Html.TextBoxFor(m => m.cantidad, new { @id = "cantidads", @class = "form-control", @placeholder = "Cantidad", @name = "cantidad" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="kt-section">
                        <label>Nombre de Cuotas:</label>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"><i class="la la-plus"></i></span></div>
                            @Html.TextBoxFor(m => m.numero_cuota, new { @id = "numero_cuotas", @class = "form-control", @placeholder = "Número de Cuotas", @name = "numero_cuota" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="kt-section">
                        <label>Descuento Mensual:</label>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"><i class="la la-credit-card"></i></span></div>
                            @Html.TextBoxFor(m => m.desc_mensual, new { @id = "desc_mensuals", @class = "form-control", @placeholder = "Descuento Mensual", @name = "desc_mensual"})
                        </div>
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="kt-section">
                        <label>Calcular:</label>
                        <div class="input-group">
                            <a href='#' class='btn btn-outline-primary add' data-toggle="kt-tooltip" data-original-title="Calcular"><span class="la la-dollar"></span></a>                        
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(m => m.fecha_solicitud, new { @id = "fecha", @Value = @DateTime.Now.ToShortDateString() })
                @Html.HiddenFor(m => m.emp_aso_id, new { @id = "asociacion_id", @Value = "2" })
            </div>
        </div>
        
    </div>
    <div>
        <input type="submit" value="Confirmar" class="btn btn-primary" />
    </div>
    <br />
}

<table class="table table-hover" style="text-align:center">
    <tr>
        <th>Item</th>
        <th>Valor</th>
        <th>Num. cuotas</th>
        <th>Desc. Mensual</th>
        <th>Fecha Solicitud</th>
        <th>Fecha Aprobación</th>
        <th>Aprobación</th>
        <th>Estado</th>
        <th>Acción</th>
    </tr>

    @foreach (var item in listCredxUsu)
    {
        <tr class='row_@item.id_credito'>
            <td>@item.id_credito</td>
            <td>@item.cantidad</td>
            <td>@item.numero_cuota</td>
            <td>@item.desc_mensual</td>
            <td>@item.fecha_solicitud.ToShortDateString()</td>
            @if (item.estado_aprobacion == true){
                <td>@item.fecha_aprobacion.ToShortDateString()</td>
            }else{<td>No se ha aprobado</td> }
           @if (item.estado_aprobacion == true){
            <td>APROBADO</td>
           }else{<td>NO APROBADO</td> }
            @if (item.estado_activacion == false && item.estado_aprobacion == false){
                <td>NO APROBADO</td>
            }else{if (item.estado_activacion == false){
                    <td>CADUCADO</td>
                }else{ <td>ACTIVO</td> }
            }
            <td>
                <a href='#' class='btn btn-outline-primary' data-toggle="kt-tooltip" data-original-title="Información" onclick='DeleteCredito(@item.id_credito)'><span class='la la-info'></span></a>
            </td>
        </tr>
    }

</table>
@*<div class="modal fade" id="MyModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="ModalTitle">Modificar Proveedor</h4>
            </div>
            <div class="modal-body">
                <form id="form">
                    <fieldset id="SubmitForm">
                        @Html.HiddenFor(m => m.id_proveedor, new { @id = "id_proveedor" })

                        <div class="form-group">
                            <label>Persona Jurídica</label>
                            @Html.TextBoxFor(m => m.persona_juridica, new { @id = "persona_juridica", @class = "form-control", @placeholder = "Name*" })
                        </div>


                        <div class="form-group">
                            <label>RUC</label>
                            @Html.TextBoxFor(m => m.RUC, new { @id = "RUC", @class = "form-control", @placeholder = "Name*" })
                        </div>

                        <div class="form-group">
                            <label>Nombre</label>
                            @Html.TextBoxFor(m => m.nombre, new { @id = "nombre", @class = "form-control", @placeholder = "Name*" })
                        </div>

                        <div class="form-group">
                            <label>Descripción</label>
                            @Html.TextBoxFor(m => m.descripcion, new { @id = "descripcion", @class = "form-control", @placeholder = "Name*" })
                        </div>

                        <div class="form-group">
                            <label>Email</label>
                            @Html.TextBoxFor(m => m.email, new { @id = "email", @class = "form-control", @placeholder = "Name*" })
                        </div>

                        <div class="form-group">
                            <label>Dirección</label>
                            @Html.TextBoxFor(m => m.direccion, new { @id = "direccion", @class = "form-control", @placeholder = "Name*" })
                        </div>


                        <div class="form-group">
                            <label>Teléfono</label>
                            @Html.TextBoxFor(m => m.telefono, new { @id = "telefono", @class = "form-control", @placeholder = "Name*" })
                        </div>


                        <div class="form-group">
                            <a href="#" class="btn btn-block btn-danger" onclick="UpdateProveedor()">Save</a>
                        </div>
                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</div>*@
<script>
    $(document).ready(function () {

        $('.add').click(function () {
            Swal.fire({
                title: 'Descuento Calculado: ',
                icon: 'success',
                confirmButtonText: 'Ok',
                cancelButtonText: 'Cancelar'
            })
            $('#desc_mensuals').val($('#cantidads').val() / $('#numero_cuotas').val())
        })
    })


    var row;
    function UpdateProveedor(Proveedor) {
        var data = $("#SubmitForm").serialize();
        $.ajax({
            type: "Post",
            url: "/proveedores/UpdateProveedores",
            data: data,
            success: function (result) {
                if (result == "Registro actualizado") {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'success',
                        title: 'Registro actualizado',
                        showConfirmButton: false,
                        timer: 1500
                    })
                    row.find("td").eq(1).html($('#persona_juridica').val());
                    row.find("td").eq(2).html($('#RUC').val());
                    row.find("td").eq(3).html($('#nombre').val());
                    row.find("td").eq(4).html($('#descripcion').val());
                    row.find("td").eq(5).html($('#email').val());
                    row.find("td").eq(6).html($('#direccion').val());
                    row.find("td").eq(7).html($('#telefono').val());
                } else {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'error',
                        title: 'Error al actualizado',
                        showConfirmButton: false,
                        timer: 1500
                    })
                }
                $("#MyModal").modal("hide");
            }
        })
    }
    $(document).ready(function () {
        $('[data-id]').click(function () {
            row = $(this).parents("tr");
            var id = $(this).data("id")
            $("#MyModal").modal();
            $.ajax({
                type: "GET",
                url: "/proveedores/GetProveedoresById?ProveedoresId=" + id,
                success: function (data) {
                    var obj = JSON.parse(data);
                    $("#id_proveedor").val(obj[0].id_proveedor);
                    $("#persona_juridica").val(obj[0].persona_juridica);
                    $("#RUC").val(obj[0].RUC);
                    $("#nombre").val(obj[0].nombre);
                    $("#descripcion").val(obj[0].descripcion);
                    $("#email").val(obj[0].email);
                    $("#direccion").val(obj[0].direccion);
                    $("#telefono").val(obj[0].telefono);
                }
            })
        })
    })
    function DeleteProveedor(Proveedor) {
        Swal.fire({
            title: 'Estás seguro?',
            text: 'Deseas eliminar el registro seleccionado!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Borrar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "POST",
                    url: "/proveedores/DeleteProveedores?ProveedoresId=" + Proveedor,
                    success: function (result) {
                        if (result == "Eliminado") {
                            Swal.fire(
                                'Borrado!',
                                'El registro fue borrado con éxito',
                                'success'
                            )
                            $(".row_" + Proveedor).remove();
                        } else {
                            Swal.fire(
                                'Borrado!',
                                'No se pudo eliminar el registro',
                                'error'
                            )
                        }
                    }
                })
            }
        })
    }
</script>